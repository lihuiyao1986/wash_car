//
//  MainController.m
//  WashCar
//
//  Created by yanshengli on 14-12-19.
//  Copyright (c) 2014年 cheletong. All rights reserved.
//

#import "MainController.h"
#import "LoginController.h"
#import "AboutMyViewController.h"
#import "PayIndexController.h"
#import "CustTextImageBtnWidget.h"
#import "LineViewWidget.h"
#import "CustBgViewWidget.h"
#import "PayDetailController.h"
#import "OrderDao.h"
#import "OrderDaoModel.h"

//联系客户按钮对应的宽度
#define contactBtnAreaW 82.f
//定位图标的宽度
#define mapIconW 16.f
//定位图标的高度
#define mapIconH 19.f
//显示定位信息label的长度
#define addressW 160.f
//定位图标x偏移量
#define mapIconXPadding 15.f
//分割线的长度
#define seperatorLineW 2.f
//正在定位的提示
#define locatingTitle @"正在获取您的位置..."
//定位失败的提示
#define locateFailTitle @"对不起，获取您的位置失败"

//呼叫跑男按钮的高度
#define callBtnHeight 60.f
//呼叫跑男洗车按钮距离x边缘的距离
#define callBtnXPadding 80.f
//呼叫按钮标题
#define callBtnTitle  @"呼叫跑男洗车"
//提示视图的标题
#define orderTipInfoTitle @"有洗车订单正在进行"
//提示视图x偏移
#define orderTipViewX 20.f
//提示视图的高度
#define orderTipViewH 44.f


/***
 *
 *@description:主页面对应的控制器--实现
 *@author:liys
 *@since:2014-1-6
 *@corp:cheletong
 */
@interface MainController ()
<BMKLocationServiceDelegate,
 BMKGeoCodeSearchDelegate>
@end

@implementation MainController

#pragma mark 存放地址和流程演示按钮的头部视图
@synthesize headView;

#pragma mark 中间视图
@synthesize centerView;

#pragma mark 有订单的提示视图
@synthesize orderTipView;

#pragma mark 生命周期方法--viewDidLoad
- (void)viewDidLoad {
    
    //1.调用父类的viewDidLoad方法
    [super viewDidLoad];
    
    //2.初始化UI主件
    [self drawUIView];
    
    //3.初始化定位服务
    [self initBDMapLocService];
    
    //4.注册通知
    [self registerNofications];
}

#pragma mark 生命周期方法--viewWillAppear
-(void)viewWillAppear:(BOOL)animated
{
    //1.调用父类的方法
    [super viewWillAppear:animated];
    
    //2.设置代理
    _locService.delegate = self;
    _geoCodeSearch.delegate = self;
    
    //3.开始定位
    [self beginLocate];
}

#pragma mark 生命周期方法--viewWillDisappear
-(void)viewWillDisappear:(BOOL)animated
{
    //1.调用父类的方法
    [super viewWillDisappear:animated];
    
    //2.释放内存
    _locService.delegate = nil;
    _geoCodeSearch.delegate = nil;
}

#pragma mark 初始化百度地图定位的service
-(void)initBDMapLocService
{
    _locService = [[BMKLocationService alloc]init];
    _geoCodeSearch = [[BMKGeoCodeSearch alloc]init];
}


#pragma mark 初始化UI主件
- (void) drawUIView
{
    //1.顶部view
    [self.view addSubview:self.headView];
    
    //2.跑男图标
    [self.view addSubview:self.centerView];
}

//--------------有订单的提示视图区域----------------//
#pragma mark 更新提示视图的状态
-(void)updateOrderTipViewStatus:(NSNotification*)notification
{
    
    if ([CommonUtils hasOrderStatus])
    {
        [self.orderTipView.layer removeAllAnimations];
        CABasicAnimation *scaleAnimation = [CABasicAnimation animation];
        scaleAnimation.keyPath = @"transform.scale";
        scaleAnimation.fromValue = @(0.0);
        scaleAnimation.toValue = @(1.0);
        scaleAnimation.duration = 0.35f;
        scaleAnimation.removedOnCompletion = YES;
        [self.orderTipView.layer addAnimation:scaleAnimation forKey:@"scale_animation_show"];
        [self.view addSubview:self.orderTipView];
    }
    else
    {
        [self.orderTipView removeFromSuperview];
    }
}

#pragma mark 有订单的提示视图
-(UIView*)orderTipView
{
    if (!_orderTipView)
    {
        CGFloat orderTipX = orderTipViewX;
        CGFloat orderTipY = CGRectGetMaxY(self.headView.frame);
        CGFloat orderTipW = SCREEN_WIDTH - 2 * orderTipX;
        CGFloat orderTipH = orderTipViewH;
        CGRect  orderTipFrame = Rect(orderTipX, orderTipY, orderTipW, orderTipH);
        _orderTipView = [[CustBgViewWidget alloc]initWithFrame:orderTipFrame
                                                 shadowOpacity:0.4
                                                   shadowColor:0x878787
                                                   //shadowColor:0x777777
                                                  shadowRadius:1.f
                                                       bgColor:0x999999
                                                  bgColorAlpha:0.7
                                                  cornerRadius:0.5f
                                                 shadowYOffset:1.f
                                                 shadowXOffset:0.f];
        _orderTiplb = [[UILabel alloc]initWithFrame:_orderTipView.bounds];
        _orderTiplb.font = FONT_TextSize_S4;
        _orderTiplb.textColor = RGB_TextColor_C0;
        _orderTiplb.backgroundColor = [UIColor clearColor];
        _orderTiplb.numberOfLines = 1;
        _orderTiplb.lineBreakMode = NSLineBreakByWordWrapping;
        _orderTiplb.textAlignment = NSTextAlignmentCenter;
        _orderTiplb.text = orderTipInfoTitle;
        UITapGestureRecognizer *orderViewTapGesture = [[UITapGestureRecognizer alloc]initWithTarget:self
        
                                                                                             action:@selector(orderTipViewTap:)];
        [_orderTipView addGestureRecognizer:orderViewTapGesture];
        [_orderTipView addSubview:_orderTiplb];
    }
    return _orderTipView;
}

#pragma mark 手势
-(void)orderTipViewTap:(UITapGestureRecognizer*)tapGesture
{
    [WashcarDefaultCenter postNotificationName:WashcarTipViewUpdateNotification object:nil];
}

#pragma mark 注册监听
-(void)registerNofications
{
    [WashcarDefaultCenter addObserver:self
                             selector:@selector(updateOrderTipViewStatus:)
                                 name:WashcarTipViewUpdateNotification
                               object:nil];
}

#pragma mark 移除通知
-(void)removeNofications
{
    [WashcarDefaultCenter removeObserver:self name:WashcarTipViewUpdateNotification object:nil];
}


//--------------------中间区域------------------------//
#pragma mark 中间视图--包括logo,跑男按钮,红包按钮
-(UIView*)centerView
{
    if (!_centerView)
    {
        //中间视图
        CGFloat centerX = 0.f;
        CGFloat centerY = CGRectGetMaxY(_headView.frame);
        CGFloat centerW = SCREEN_WIDTH;
        CGFloat centerH = SCREEN_HEIGHT - centerY;
        CGRect  centerFrame = (CGRect){centerX,centerY,centerW,centerH};
        _centerView = [[UIView alloc]initWithFrame:centerFrame];
        
        //跑男logo
        CGFloat runManLogoX = 0.f;
        CGFloat runManLogoY = 0.f;
        CGFloat runManLogoW = CGRectGetWidth(_centerView.frame);
        CGFloat runManLogoH = CGRectGetHeight(_centerView.frame) - runManLogoY - callBtnHeight - 30.f;
        CGRect  runManLogoFrame = (CGRect){runManLogoX,runManLogoY,runManLogoW,runManLogoH};
        _runManImgView = [[UIImageView alloc]initWithFrame:runManLogoFrame];
        _runManImgView.contentMode = UIViewContentModeScaleAspectFit;
        _runManImgView.image = [UIImage imageNamed:@"runManLogo.png"];
        [_centerView addSubview:_runManImgView];

        //呼叫跑男按钮
        CGFloat callX = callBtnXPadding;
        CGFloat callY = CGRectGetMaxY(_runManImgView.frame);
        CGFloat callH = callBtnHeight;
        CGFloat callW = SCREEN_WIDTH - 2 * callX;
        CGRect  callFrame = (CGRect){callX,callY,callW,callH};
        _callRunManBtn = [CommonUtils washCarBtn:callFrame];
        _callRunManBtn.frame = callFrame;
        _callRunManBtn.titleLabel.font = [UIFont boldSystemFontOfSize:20];
        [_callRunManBtn setTitle:callBtnTitle forState:UIControlStateNormal];
        [_callRunManBtn setTitle:callBtnTitle forState:UIControlStateHighlighted];
        [_callRunManBtn setTitle:callBtnTitle forState:UIControlStateSelected];
        [_callRunManBtn setTitleColor:RGB_TextColor_C0 forState:UIControlStateNormal];
        [_callRunManBtn setTitleColor:RGB_TextColor_C0 forState:UIControlStateHighlighted];
        [_callRunManBtn setTitleColor:RGB_TextColor_C0 forState:UIControlStateSelected];
        _callRunManBtn.layer.cornerRadius = 5;
        _callRunManBtn.layer.masksToBounds = YES;
        _callRunManBtn.backgroundColor = [UIColor blueColor];
        [_callRunManBtn addTarget:self action:@selector(callBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [_centerView addSubview:_callRunManBtn];
    }
    return _centerView;
}


#pragma mark 呼叫跑男按钮被点击
-(void)callBtnClicked:(UIButton*)sender
{
    OrderDao *orderDao = [[OrderDao alloc] init];
    [orderDao deleteAllOrder];
    OrderDaoModel *order = [[OrderDaoModel alloc]init];
    order.orderNo = @"12345678";
    order.orderTime = [DateUtils nowForString];
    order.receivedTime = [DateUtils nowForString];
    order.arrivalTime = [DateUtils nowForString];
    order.washingTime = [DateUtils nowForString];
    order.finishedTime = [DateUtils nowForString];
    order.mobile = @"13606603642";
    order.carNumber = @"浙a123456";
    order.carPosition = @"浙江省杭州市";
    order.payway = [NSString stringWithFormat:@"%@",[NSNumber numberWithInt:WashCarOrderPayway_Reward]];
    order.status = [NSString stringWithFormat:@"%@",[NSNumber numberWithInt:WashCarOrderStatus_Order_Arrival]];
    order.valid = [NSString stringWithFormat:@"%@",[NSNumber numberWithInt:WashCarOrderValid_Valid]];
    [orderDao saveOrder:order];
    PayDetailController *payView = [[PayDetailController alloc]init];
    [self pushViewControllerFromBottom:payView];
}

//----------------头部视图区域-------------------//
#pragma mark 头部按钮
-(UIView *)headView
{
    if (!_headView)
    {
        //1.头部背景视图
        CGRect headViewFrame = Rect(0.f, 0.f, SCREEN_WIDTH, TOP_BLANNER_HEIGHT + SCREEN_HEIGHT_START);
        _headView = [[CustBgViewWidget alloc]initWithFrame:headViewFrame
                                             shadowOpacity:1.f
                                               shadowColor:0x999999
                                              shadowRadius:1.f
                                                   bgColor:0x4193cd
                                              bgColorAlpha:1.0
                                              cornerRadius:0
                                             shadowYOffset:1.f
                                             shadowXOffset:0.f];
        
        //3.定位图标
        CGFloat mapIconX = mapIconXPadding;
        CGFloat mapIconY = SCREEN_HEIGHT_START + (TOP_BLANNER_HEIGHT- mapIconH)/2;
        CGRect  mapIconFrame = (CGRect){mapIconX,mapIconY,mapIconW,mapIconH};
        UIImageView *mapIcon = [[UIImageView alloc]initWithFrame:mapIconFrame];
        mapIcon.image = [UIImage imageNamed:@"myLocation"];
        mapIcon.contentMode = UIViewContentModeScaleAspectFit;
        [_headView addSubview:mapIcon];
        
        //4.定位label
        CGFloat addressX = CGRectGetMaxX(mapIcon.frame) + 15.f;
        CGFloat addressY = SCREEN_HEIGHT_START;
        CGFloat addressH = TOP_BLANNER_HEIGHT;
        CGRect  addressFrame = (CGRect){addressX,addressY,addressW,addressH};
        _addresslb = [[UILabel alloc] initWithFrame:addressFrame];
        _addresslb.backgroundColor = [UIColor clearColor];
        _addresslb.text = locatingTitle;
        _addresslb.lineBreakMode = NSLineBreakByTruncatingTail;
        _addresslb.numberOfLines = 2;
        _addresslb.textColor = RGB_TextColor_C0;
        _addresslb.font = FONT_TextSize_S0;
        _addresslb.userInteractionEnabled = YES;
        UITapGestureRecognizer *locateRecognizer = [[UITapGestureRecognizer alloc]initWithTarget:self
                                                                                          action:@selector(locateRecognizerTaped:)];
        [_addresslb addGestureRecognizer:locateRecognizer];
        [_headView addSubview:_addresslb];
        
        //5.分割线
        CGFloat lineX = CGRectGetWidth(_headView.frame) - 82.f;
        CGFloat lineY = SCREEN_HEIGHT_START;
        CGFloat lineW = seperatorLineW;
        CGFloat lineH = TOP_BLANNER_HEIGHT;
        CGRect  lineFrame = Rect(lineX, lineY, lineW, lineH);
        UIImageView *separatorLine = [[UIImageView alloc]initWithFrame:lineFrame];
        separatorLine.image = [UIImage imageNamed:@"seperatorLine"];
        separatorLine.contentMode = UIViewContentModeScaleAspectFit;
        separatorLine.backgroundColor = [UIColor clearColor];
        [_headView addSubview:separatorLine];
        
        //6.客服按钮区域
        CGFloat callBtnViewW = 82.f;
        CGFloat callBtnViewH = TOP_BLANNER_HEIGHT;
        CGFloat callBtnViewX = CGRectGetMaxX(separatorLine.frame);
        CGFloat callBtnViewY = SCREEN_HEIGHT_START;
        CGRect  callBtnViewFrame = Rect(callBtnViewX, callBtnViewY, callBtnViewW, callBtnViewH);
        UIButton *callBtnView = [UIButton buttonWithType:UIButtonTypeCustom];
        callBtnView.backgroundColor = [UIColor clearColor];
        callBtnView.frame = callBtnViewFrame;
        [callBtnView addTarget:self action:@selector(callServiceBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [_headView addSubview:callBtnView];
        
        //7.客服按钮
        _callServiceBtn = [[TapImageViewWidget alloc]initWithImage:[UIImage imageNamed:@"callIcon"]];
        CGFloat callBtnW = 20.f;
        CGFloat callBtnH = 21.f;
        CGFloat callBtnX = (CGRectGetWidth(callBtnView.frame) - callBtnW)/2;
        CGFloat callBtnY = (CGRectGetHeight(callBtnView.frame) - callBtnH)/2;
        CGRect  callBtnFrame = Rect(callBtnX, callBtnY, callBtnW, callBtnH);
        _callServiceBtn.frame = callBtnFrame;
        _callServiceBtn.backgroundColor = [UIColor clearColor];
        _callServiceBtn.contentMode = UIViewContentModeScaleAspectFit;
        [callBtnView addSubview:_callServiceBtn];
    }
    return _headView;
}

#pragma mark
-(void)locateRecognizerTaped:(UITapGestureRecognizer*)gesture
{
    _addresslb.text = locatingTitle;
    [self beginLocate];
}

#pragma mark 客服电话按钮被点击的事件
-(void)callServiceBtnClicked:(UIButton*)btn
{
    [self contactService];
}

#pragma mark 联系客服
-(void)contactService
{
    [ApplicationDelegate showAlertWithTowBtns:nil message:@"拨打洗车人员电话吗?" doneBtnFinishBlock:^()
     {
         [CommonUtils openUrl:WashCarServiceTelNum urltype:TELURL];
     }];
    
}

#pragma mark 开始定位
-(void)beginLocate
{
    [_locService startUserLocationService];
}

#pragma mark 停止定位
-(void)stopLocate
{
    [_locService stopUserLocationService];
    
}

#pragma mark BMKLocationServiceDelegate代理方法
- (void)didUpdateUserLocation:(BMKUserLocation *)userLocation
{
    if (userLocation != nil)
    {
        //创建反地理编码
        BMKReverseGeoCodeOption* reverseGeoCodeOption = [[BMKReverseGeoCodeOption alloc] init];
        reverseGeoCodeOption.reverseGeoPoint = userLocation.location.coordinate;
        
        //开始反地理编码
        [_geoCodeSearch reverseGeoCode:reverseGeoCodeOption];

        //停止定位
        [self stopLocate];
    }
    else
    {
        [self stopLocate];
         _addresslb.text = locateFailTitle;
    }
}

- (void)didFailToLocateUserWithError:(NSError *)error
{
    _addresslb.text = locateFailTitle;
    [self stopLocate];
}


#pragma mark - BMKGeoCodeSearchDelegate代理方法
- (void)onGetReverseGeoCodeResult:(BMKGeoCodeSearch *)searcher result:(BMKReverseGeoCodeResult *)result errorCode:(BMKSearchErrorCode)error
{
    if (!error)
    {
        _addresslb.text = result.address;
    }
    else
    {
        _addresslb.text = locateFailTitle;
    }
}

//-------------其他---------------------//
#pragma 收到内存警告
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

#pragma mark 自定义导航栏
-(BaseNaviBarWidget *)navBar
{
    return nil;
}

#pragma mark 移除对应的对象
-(void)dealloc
{
    //1.头部视图
    _headView = nil;
    _addresslb = nil;  //地址
    _callServiceBtn = nil;  //联系客服按钮
    
    //2.中间
    _runManImgView = nil; //跑男图
    _callRunManBtn = nil; //呼叫跑男
    _centerView = nil;//中间视图
    
    //3.有订单的提示视图
    _orderTipView = nil;
    _orderTiplb = nil;
    
    //4.地图定位service
    _locService.delegate = nil;
    _geoCodeSearch.delegate = nil;
    _locService = nil;
    _geoCodeSearch = nil;
    
    //5.移除通知
    [self removeNofications];
    
    //6.打印日志
    APP_DebugLog(@"%@ dealloc method was invoked",NSStringFromClass([self class]));
}


@end
